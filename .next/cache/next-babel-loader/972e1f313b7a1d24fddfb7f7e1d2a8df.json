{"ast":null,"code":"var _jsxFileName = \"/home/snakeeye10/portfolio/components/ProjectCard.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Card, Accordion } from 'react-bootstrap';\n\nfunction ProjectCard(props) {\n  var plat = props.plat;\n  var header = null;\n  var cardBody = null;\n  var sub;\n\n  if (plat) {\n    sub = __jsx(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 16\n      }\n    }, \"Platform: \", props.plat);\n  }\n\n  var body = __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }\n  }, __jsx(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, \"Language(s): \", props.lang), sub, __jsx(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, props.text));\n\n  if (props.event) {\n    header = __jsx(Accordion.Toggle, {\n      as: Card.Header,\n      className: props.cName,\n      eventKey: props.event,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 18\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, props.title));\n    cardBody = __jsx(Accordion.Collapse, {\n      eventKey: props.event,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }\n    }, body);\n  } else {\n    header = __jsx(Card.Header, {\n      className: props.cName,\n      as: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 18\n      }\n    }, props.title);\n    cardBody = body;\n  }\n\n  return __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, header, cardBody);\n}\n\n_c = ProjectCard;\nexport default ProjectCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"sources":["/home/snakeeye10/portfolio/components/ProjectCard.js"],"names":["React","Card","Accordion","ProjectCard","props","plat","header","cardBody","sub","body","lang","text","event","Header","cName","title"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,iBAAhC;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,MAAIC,MAAM,GAAG,IAAb;AACA,MAAIC,QAAQ,GAAG,IAAf;AACA,MAAIC,GAAJ;;AACA,MAAIH,IAAJ,EAAU;AACNG,IAAAA,GAAG,GAAI,MAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACIJ,KAAK,CAACC,IADV,CAAP;AAGH;;AAED,MAAII,IAAI,GAAG,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACX,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACiBL,KAAK,CAACM,IADvB,CADW,EAIVF,GAJU,EAKX,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,CAACO,IADX,CALW,CAAX;;AAUA,MAAIP,KAAK,CAACQ,KAAV,EAAiB;AACbN,IAAAA,MAAM,GAAG,MAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,EAAE,EAAEL,IAAI,CAACY,MAA3B;AAAmC,MAAA,SAAS,EAAET,KAAK,CAACU,KAApD;AAA2D,MAAA,QAAQ,EAAEV,KAAK,CAACQ,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKR,KAAK,CAACW,KAAX,CADK,CAAT;AAEAR,IAAAA,QAAQ,GAAG,MAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,QAAQ,EAAEH,KAAK,CAACQ,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACNH,IADM,CAAX;AAGH,GAND,MAOK;AACDH,IAAAA,MAAM,GAAG,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAEF,KAAK,CAACU,KAA9B;AAAqC,MAAA,EAAE,EAAC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8CV,KAAK,CAACW,KAApD,CAAT;AACAR,IAAAA,QAAQ,GAAGE,IAAX;AACH;;AACD,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,MADL,EAEKC,QAFL,CADJ;AAMH;;KAtCQJ,W;AAwCT,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { Card, Accordion } from 'react-bootstrap';\n\nfunction ProjectCard(props) {\n    const plat = props.plat;\n    let header = null;\n    let cardBody = null;\n    let sub;\n    if (plat) {\n        sub =  <Card.Subtitle>\n        Platform: {props.plat}\n    </Card.Subtitle>\n    }\n\n    let body = <Card.Body>\n    <Card.Title>\n       Language(s): {props.lang}\n    </Card.Title>\n    {sub}\n    <Card.Text>\n        {props.text}\n    </Card.Text>\n</Card.Body>\n\n    if (props.event) {\n        header = <Accordion.Toggle as={Card.Header} className={props.cName} eventKey={props.event}>\n            <h3>{props.title}</h3></Accordion.Toggle>\n        cardBody = <Accordion.Collapse eventKey={props.event} >\n            {body}\n        </Accordion.Collapse>\n    }\n    else {\n        header = <Card.Header className={props.cName} as=\"h3\">{props.title}</Card.Header>\n        cardBody = body;\n    }\n    return (\n        <Card>\n            {header}\n            {cardBody}\n        </Card>\n    )\n}\n\nexport default ProjectCard;"]},"metadata":{},"sourceType":"module"}