{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport LabeledInput from './LabeledInput';\nimport LabeledTextArea from './LabeledTextArea';\nimport StyledRow from '../components/StyledRow';\nimport StyledColumn from '../components/StyledColumn';\nimport StyledForm from '../components/StyledForm';\nimport SubmitButton from '../components/SubmitButton';\n\nvar ContactForm = function ContactForm(props) {\n  _s();\n\n  var _useState = useState('FirstName'),\n      firstName = _useState[0],\n      setFirstName = _useState[1];\n\n  var _useState2 = useState('LastName'),\n      lastName = _useState2[0],\n      setLastName = _useState2[1];\n\n  var _useState3 = useState('Email'),\n      email = _useState3[0],\n      setEmail = _useState3[1];\n\n  var _useState4 = useState('Phone'),\n      phone = _useState4[0],\n      setPhone = _useState4[1];\n\n  var _useState5 = useState('msg'),\n      message = _useState5[0],\n      setMessage = _useState5[1];\n\n  var submitForm = function submitForm(e) {\n    e.preventDefault();\n    fetch('/api/contact', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        phone: phone,\n        message: message\n      })\n    }).then(function (res) {\n      console.log(res);\n    });\n  };\n\n  return __jsx(StyledForm, {\n    action: \"/service-form\",\n    method: \"post\",\n    bg: props.bg\n  }, __jsx(\"p\", null, \"Required fields are followed by \", __jsx(\"strong\", null, __jsx(\"abbr\", {\n    title: \"required\"\n  }, \"*\")), \".\"), __jsx(StyledRow, null, __jsx(StyledColumn, null, __jsx(LabeledInput, {\n    name: \"First Name\",\n    placeholder: \"First Name\",\n    type: \"text\",\n    required: true,\n    id: \"first_name\",\n    onChange: function onChange(e) {\n      return setFirstName(e.target.value);\n    }\n  })), __jsx(StyledColumn, null, __jsx(LabeledInput, {\n    name: \"Last Name\",\n    placeholder: \"Last Name\",\n    type: \"text\",\n    required: true,\n    id: \"last_name\",\n    onChange: function onChange(e) {\n      return setLastName(e.target.value);\n    }\n  }))), __jsx(StyledRow, null, __jsx(StyledColumn, null, __jsx(LabeledInput, {\n    name: \"Email Address\",\n    placeholder: \"name@example.com\",\n    type: \"email\",\n    required: true,\n    id: \"email\",\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    }\n  })), __jsx(StyledColumn, null, __jsx(LabeledInput, {\n    name: \"Phone Number\",\n    placeholder: \"#\",\n    type: \"phone\",\n    required: true,\n    id: \"phone\",\n    onChange: function onChange(e) {\n      return setPhone(e.target.value);\n    }\n  }))), __jsx(LabeledTextArea, {\n    name: \"Message\",\n    placeholder: \"Tell me how I can help you here\",\n    required: true,\n    id: \"msg\",\n    onChange: function onChange(e) {\n      return setMessage(e.target.value);\n    }\n  }), __jsx(SubmitButton, {\n    onClick: submitForm\n  }));\n};\n\n_s(ContactForm, \"QYU4o7UUbXpnlcgeQT5oI1p4khU=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/home/snakeeye10/portfolio/components/ContactForm.js"],"names":["React","useState","LabeledInput","LabeledTextArea","StyledRow","StyledColumn","StyledForm","SubmitButton","ContactForm","props","firstName","setFirstName","lastName","setLastName","email","setEmail","phone","setPhone","message","setMessage","submitForm","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","console","log","bg","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport LabeledInput from './LabeledInput';\nimport LabeledTextArea from './LabeledTextArea';\nimport StyledRow from '../components/StyledRow';\nimport StyledColumn from '../components/StyledColumn';\nimport StyledForm from '../components/StyledForm';\nimport SubmitButton from '../components/SubmitButton';\n\n\n\nconst ContactForm =(props) => {\n\n    let [firstName, setFirstName] = useState('FirstName');\n    let [lastName, setLastName] = useState('LastName');\n    let [email, setEmail] = useState('Email');\n    let [phone, setPhone] = useState('Phone');\n    let [message, setMessage] = useState('msg');\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        fetch('/api/contact', {\n            method : 'post',\n            headers: {\n                'Accept' : 'application/json, text/plain */*',\n                'Content-Type' : 'application/json'\n            },\n            body: JSON.stringify({\n                firstName : firstName,\n                lastName : lastName,\n                email : email,\n                phone : phone,\n                message : message,\n            })\n        }).then((res) => {\n            console.log(res);\n        })\n    }\n\n    return (\n    <StyledForm action=\"/service-form\" method=\"post\" bg={props.bg}  >\n        <p>Required fields are followed by <strong><abbr title=\"required\">*</abbr></strong>.</p>\n        <StyledRow>\n            <StyledColumn>\n                <LabeledInput name=\"First Name\" placeholder=\"First Name\" type=\"text\" required={true} id=\"first_name\" onChange={e => setFirstName(e.target.value)} />\n            </StyledColumn>\n            <StyledColumn>\n                <LabeledInput name=\"Last Name\" placeholder=\"Last Name\" type=\"text\" required={true} id=\"last_name\" onChange={e => setLastName(e.target.value)} />\n            </StyledColumn>\n        </StyledRow>\n        <StyledRow>\n            <StyledColumn>\n                <LabeledInput name=\"Email Address\" placeholder=\"name@example.com\" type=\"email\" required={true} id=\"email\" onChange={e => setEmail(e.target.value)} />\n            </StyledColumn>\n            <StyledColumn>\n                <LabeledInput name=\"Phone Number\" placeholder=\"#\" type=\"phone\" required={true} id=\"phone\" onChange={e => setPhone(e.target.value)} />\n            </StyledColumn>\n        </StyledRow>\n        <LabeledTextArea name=\"Message\" placeholder=\"Tell me how I can help you here\" required={true} id=\"msg\" onChange={e => setMessage(e.target.value)} />\n        <SubmitButton onClick={submitForm} />\n    </StyledForm>\n    )\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}