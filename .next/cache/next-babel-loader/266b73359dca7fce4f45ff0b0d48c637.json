{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport MyList from './MyList';\nconst StyledCard = styled.div`\n    display : flex;\n    flex-direction: column;\n    border: 1px solid rgba(0,0,0,.125);\n    border-radius: .25rem;\n`;\nconst StyledBody = styled.div`\n    flex: 1 1 auto;\n    min-height: 1px;\n    padding:  ${props => props.flush ? 0 : \"1.25rem\"};\n    background-color : ${props => props.bg};\n`;\nconst StyledTitle = styled.h5`\n    margin-bottom: .75rem;\n    font-weight: 500;\n    line-height: 1.2;\n    font-size: 1.25rem\n`;\nconst StyledSubtitle = styled.h6`\n        margin-bottom: 0;\n        margin-top: -.375rem;\n        font-size: 1rem;\n        font-weight: 500;\n        line-height: 1.2;\n`;\nconst StyledText = styled.p`\n        margin-top: 0;\n`;\nconst StyledHeader = styled.div`\n    padding: .75rem 1.25rem;\n    margin-bottom: 0;\n    background-color: ${props => props.headBg};\n    border-bottom: 1px solid rgba(0,0,0,.125);\n    display : block;\n`;\n\nconst MyCard = props => {\n  let title = null;\n  let subtitle = null;\n  let header = null;\n  let items = null;\n  let flush = false;\n  let body = null;\n  let bodyBg = \"transparent\";\n\n  if (props.title) {\n    title = __jsx(StyledTitle, null, props.title);\n  }\n\n  if (props.subtitle) {\n    subtitle = __jsx(StyledSubtitle, null, props.subtitle);\n  }\n\n  if (props.header) {\n    header = __jsx(StyledHeader, {\n      headBg: props.headBg\n    }, __jsx(\"h3\", null, props.header));\n  }\n\n  if (props.items) {\n    items = __jsx(MyList, {\n      items: props.items\n    });\n    flush = true;\n  }\n\n  if (props.body) {\n    body = props.body;\n  }\n\n  if (props.bodyBg) {\n    bodyBg = props.bodyBg;\n  }\n\n  return __jsx(StyledCard, null, header, __jsx(StyledBody, {\n    flush: flush,\n    bg: bodyBg\n  }, title, subtitle, items, body, __jsx(StyledText, null, props.text)));\n};\n\nexport default MyCard;","map":{"version":3,"sources":["/home/snakeeye10/portfolio/components/MyCard.js"],"names":["React","styled","MyList","StyledCard","div","StyledBody","props","flush","bg","StyledTitle","h5","StyledSubtitle","h6","StyledText","p","StyledHeader","headBg","MyCard","title","subtitle","header","items","body","bodyBg","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,UAAU,GAAGF,MAAM,CAACG,GAAI;;;;;CAA9B;AAMA,MAAMC,UAAU,GAAGJ,MAAM,CAACG,GAAI;;;gBAGdE,KAAK,IAAIA,KAAK,CAACC,KAAN,GAAc,CAAd,GAAkB,SAAU;yBAC5BD,KAAK,IAAIA,KAAK,CAACE,EAAG;CAJ3C;AAOA,MAAMC,WAAW,GAAGR,MAAM,CAACS,EAAG;;;;;CAA9B;AAMA,MAAMC,cAAc,GAAGV,MAAM,CAACW,EAAG;;;;;;CAAjC;AAOA,MAAMC,UAAU,GAAGZ,MAAM,CAACa,CAAE;;CAA5B;AAIA,MAAMC,YAAY,GAAGd,MAAM,CAACG,GAAI;;;wBAGRE,KAAK,IAAIA,KAAK,CAACU,MAAO;;;CAH9C;;AASA,MAAMC,MAAM,GAAIX,KAAD,IAAW;AACtB,MAAIY,KAAK,GAAG,IAAZ;AACA,MAAIC,QAAQ,GAAG,IAAf;AACA,MAAIC,MAAM,GAAG,IAAb;AACA,MAAIC,KAAK,GAAG,IAAZ;AACA,MAAId,KAAK,GAAG,KAAZ;AACA,MAAIe,IAAI,GAAG,IAAX;AACA,MAAIC,MAAM,GAAG,aAAb;;AACA,MAAIjB,KAAK,CAACY,KAAV,EAAiB;AACbA,IAAAA,KAAK,GAAG,MAAC,WAAD,QAAcZ,KAAK,CAACY,KAApB,CAAR;AACH;;AACD,MAAIZ,KAAK,CAACa,QAAV,EAAmB;AACfA,IAAAA,QAAQ,GAAG,MAAC,cAAD,QAAiBb,KAAK,CAACa,QAAvB,CAAX;AACH;;AACD,MAAIb,KAAK,CAACc,MAAV,EAAiB;AACbA,IAAAA,MAAM,GAAG,MAAC,YAAD;AAAc,MAAA,MAAM,EAAEd,KAAK,CAACU;AAA5B,OAAoC,kBAAKV,KAAK,CAACc,MAAX,CAApC,CAAT;AACH;;AACD,MAAId,KAAK,CAACe,KAAV,EAAiB;AACbA,IAAAA,KAAK,GAAG,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAEf,KAAK,CAACe;AAArB,MAAR;AACAd,IAAAA,KAAK,GAAG,IAAR;AACH;;AACD,MAAID,KAAK,CAACgB,IAAV,EAAgB;AACZA,IAAAA,IAAI,GAAGhB,KAAK,CAACgB,IAAb;AACH;;AACD,MAAIhB,KAAK,CAACiB,MAAV,EAAiB;AACbA,IAAAA,MAAM,GAAGjB,KAAK,CAACiB,MAAf;AACH;;AACD,SACI,MAAC,UAAD,QACKH,MADL,EAEI,MAAC,UAAD;AAAY,IAAA,KAAK,EAAEb,KAAnB;AAA0B,IAAA,EAAE,EAAEgB;AAA9B,KACCL,KADD,EAECC,QAFD,EAGCE,KAHD,EAICC,IAJD,EAKI,MAAC,UAAD,QAAahB,KAAK,CAACkB,IAAnB,CALJ,CAFJ,CADJ;AAYH,CAvCD;;AAyCA,eAAeP,MAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport MyList from './MyList';\n\nconst StyledCard = styled.div`\n    display : flex;\n    flex-direction: column;\n    border: 1px solid rgba(0,0,0,.125);\n    border-radius: .25rem;\n`\nconst StyledBody = styled.div`\n    flex: 1 1 auto;\n    min-height: 1px;\n    padding:  ${props => props.flush ? 0 : \"1.25rem\"};\n    background-color : ${props => props.bg};\n`\n\nconst StyledTitle = styled.h5`\n    margin-bottom: .75rem;\n    font-weight: 500;\n    line-height: 1.2;\n    font-size: 1.25rem\n`\nconst StyledSubtitle = styled.h6`\n        margin-bottom: 0;\n        margin-top: -.375rem;\n        font-size: 1rem;\n        font-weight: 500;\n        line-height: 1.2;\n`\nconst StyledText = styled.p`\n        margin-top: 0;\n`\n\nconst StyledHeader = styled.div`\n    padding: .75rem 1.25rem;\n    margin-bottom: 0;\n    background-color: ${props => props.headBg};\n    border-bottom: 1px solid rgba(0,0,0,.125);\n    display : block;\n`\n\n\nconst MyCard = (props) => {\n    let title = null;\n    let subtitle = null;\n    let header = null;\n    let items = null;\n    let flush = false;\n    let body = null;\n    let bodyBg = \"transparent\";\n    if (props.title) {\n        title = <StyledTitle>{props.title}</StyledTitle>\n    }\n    if (props.subtitle){\n        subtitle = <StyledSubtitle>{props.subtitle}</StyledSubtitle>\n    }\n    if (props.header){\n        header = <StyledHeader headBg={props.headBg}><h3>{props.header}</h3></StyledHeader>\n    }\n    if (props.items) {\n        items = <MyList items={props.items} />\n        flush = true;\n    }\n    if (props.body) {\n        body = props.body;\n    }\n    if (props.bodyBg){\n        bodyBg = props.bodyBg;\n    }\n    return (\n        <StyledCard>\n            {header}\n            <StyledBody flush={flush} bg={bodyBg} >\n            {title}\n            {subtitle}\n            {items}\n            {body}\n                <StyledText>{props.text}</StyledText>\n            </StyledBody>\n        </StyledCard>\n    )\n}\n\nexport default MyCard;"]},"metadata":{},"sourceType":"module"}